#!/usr/bin/env ruby

require 'gitlab_kramdown'
require 'digest/md5'

class Util
  def self.str_hash(str)
    hi1, hi2, mid, lo = *Digest::MD5.digest(str).unpack('cCnN')
    hi1 << 56 | hi2 << 48 | mid << 32 | lo
  end

  def self.filename_to_write(item)
    if ENV["DEV_ENV"]
      yield item.identifier.without_ext
    else
      yield "#{item.identifier.without_ext}-#{str_hash(item.raw_content)}"
    end
  end
end

TITLE_FILTER_REGEXP = /(#\s)/.freeze

preprocess do
  @items.each do |item|
    next if item.binary?

    # We need to do some transformations for the title
    # Let's extract and keep it first:
    raw_title = item.raw_content.match(/^# .*$/).to_s

    # If we don't have a title in frontmatter, reuse the one we just fetch
    item[:title] ||= raw_title.gsub(TITLE_FILTER_REGEXP, '')
  end
end

compile '/**/*.md' do
  filter :gitlab_kramdown,
         input: 'GitlabKramdown',
         syntax_highlighter: 'rouge',
         syntax_highlighter_opts: {
           guess_lang: true
         },
         toc_levels: 2..6,
         with_toc: !item[:hide_toc]
  filter :convert_mermaid_html
  filter :colorize_syntax,
         default_colorizer: :rouge

  if item[:layout]
    layout "/#{item[:layout]}.haml"
  else
    layout '/default.haml'
  end

  filter :relativize_paths, :type => :html
end


route '/**/*.{html,md}' do
  if item.identifier =~ '/index.*'
    '/index.html'
  else
    "#{item.identifier.without_ext}.html"
  end
end

layout '/**/*', :haml, format: :html5

ignore '/**/_*.scss'

compile '/**/*.scss' do
  filter :sass,
         syntax: :scss,
         style: :compressed
  filter :relativize_paths, :type => :css
  Util.filename_to_write item do |name|
    write "#{name}.css"
  end
end

compile '/**/*.js' do
  Util.filename_to_write item do |name|
    write "#{name}.js"
  end
end

compile '/**/*' do
  write item.identifier.to_s
end
